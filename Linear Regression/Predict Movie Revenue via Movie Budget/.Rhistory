library(xml2)
webpage_url <- "https://www.the-numbers.com/movie/budgets/all"
webpage <- read_html(webpage_url)
library(rvest)
library(tibble)
table_movie <- rvest::html_table(webpage)[[1]] %>% tibble::as_tibble(.name_repair = "unique")  #repair the repeated columns
View(table_movie)
table_movie <- rvest::html_table(webpage) %>% tibble::as_tibble(.name_repair = "unique")  #repair the repeated columns
library(xml2)
library(rvest)
library(purrr)
webpage <- read_html(sprintf(webpage_url,i))
i<-0
webpage <- read_html(sprintf(webpage_url,i))
View(webpage)
map_df(0:5501, function(i){
webpage <- read_html(sprintf(webpage_url,i))
data.frame(html_text(html_nodes(webpage)))
}) -> table_movie
webpage <- read_html(sprintf(webpage_url,101))
webpage <- read_html(sprintf(webpage_url,101))
webpage <- read_html(sprintf(webpage_url,101))
webpage <- read_xml(sprintf(webpage_url,101))
View(webpage)
map_df(0:5501, function(i){
webpage <- read_html(sprintf(webpage_url,i))
ExOffndrsRaw <- rvest::html_table(webpage)[[1]]
}) -> table_movie
library(xml2)
library(rvest)
library(purrr)
webpage_url <- "https://www.the-numbers.com/movie/budgets/all/%d"
i<-0
webpage_url <- "https://www.the-numbers.com/movie/budgets/all/%d"
i<-0
ExOffndrsRaw <- data.frame()
map_df(0:5501, function(i){
webpage <- read_html(sprintf(webpage_url,i))
ExOffndrsRaw <- rvest::html_table(webpage)[[1]]
})
map_df(0:5501, function(i){
webpage <- read_html(sprintf(webpage_url,i))
ExOffndrsRaw <- rvest::html_table(webpage)[[1]]
return(ExOffndrsRaw)
})
webpage_url <- "https://www.the-numbers.com/movie/budgets/all/%s"
webpage_url <- "https://www.the-numbers.com/movie/budgets/all/%s"
webpage <- xml2::read_html(sprintf(webpage_url,0:5501))
webpage <- xml2::read_html(sprintf(webpage_url,101:5501))
webpage <- xml2::read_html(sprintf(webpage_url,5501))
i <- c("",seq(101,5501,100))
webpage <- xml2::read_html(sprintf(webpage_url,i)
f
webpage <- xml2::read_html(sprintf(webpage_url,i))
i <- seq(101,5501,100)
webpage <- xml2::read_html(sprintf(webpage_url,i))
webpage_url <- "https://www.the-numbers.com/movie/budgets/all/%s"
i <- seq(101,5501,100)
webpage <- xml2::read_html(sprintf(webpage_url,i))
i<-0
i<-101
while(i<=5501){
webpage <- read_html(sprintf(webpage_url,i))
i=i+100
}
url_base <- ""https://www.the-numbers.com/movie/budgets/all""
url_base <- "https://www.the-numbers.com/movie/budgets/all"
webpage_url <- read_html(url_base)
url_base <- "https://www.the-numbers.com/movie/budgets/all"
webpage_base <- read_html(url_base)
url_base <- "https://www.the-numbers.com/movie/budgets/all"
webpage_base <- read_html(url_base)
webpage_url <- "https://www.the-numbers.com/movie/budgets/all/%s"
library(tibble)
table_base <- rvest::html_table(webpage_base)[[1]] %>%
tibble::as_tibble(.name_repair = "unique") # repair the repeated columns
View(table_base)
table_new <- data.frame()
webpage_url <- "https://www.the-numbers.com/movie/budgets/all/%s"
table_new <- data.frame()
i<-101
while(i<=5501){
webpage <- read_html(sprintf(webpage_url,i))
table_new <- table_new %>% rvest::html_table(webpage)[[1]] %>%
tibble::as_tibble(.name_repair = "unique") # repair the repeated columns
i=i+100
}
webpage_url <- "https://www.the-numbers.com/movie/budgets/all/%s"
table_new <- data.frame()
i<-101
while(i<=5501){
webpage <- read_html(sprintf(webpage_url,i))
table_new <- rvest::html_table(webpage)[[1]] %>%
tibble::as_tibble(.name_repair = "unique") # repair the repeated columns
i=i+100
}
View(table_new)
h
View(table_new)
table_new <- data.frame()
i<-101
while(i<5502){
webpage <- read_html(sprintf(webpage_url,i))
table_new <- rvest::html_table(webpage)[[1]] %>%
tibble::as_tibble(.name_repair = "unique") # repair the repeated columns
i=i+100
}
View(table_new)
View(table_base)
merge(table_base,table_new)
df <- merge(table_base,table_new)
View(df)
df <- merge(table_base,table_new, all = T)
View(df)
df <- merge(table_base,table_new, by= "...1" ,all = T)
df <- merge(table_base,table_new, by= table_base$...1 ,all = T)
df <- mergeorder((table_base,table_new,all = T),table_base$...1)
df <- order(merge(table_base,table_new,all = T),table_base$...1)
df <- sort(merge(table_base,table_new,all = T),table_base$...1)
df <- merge(table_base,table_new,all = T)
df <- df[order(table_base$...1),]
View(df)
df <- merge(table_base,table_new,all = T)
df <- df[order(df$...1),]
View(df)
df <- merge(table_base,table_new,all = T)
webpage_url <- "https://www.the-numbers.com/movie/budgets/all/%s"
table_new <- data.frame()
df <- merge(table_base,table_new,all = T)
url_base <- "https://www.the-numbers.com/movie/budgets/all"
webpage_base <- read_html(url_base)
table_base <- rvest::html_table(webpage_base)[[1]] %>%
tibble::as_tibble(.name_repair = "unique") # repair the repeated columns
url_base <- "https://www.the-numbers.com/movie/budgets/all"
webpage_base <- read_html(url_base)
table_base <- rvest::html_table(webpage_base)[[1]] %>%
tibble::as_tibble(.name_repair = "unique") # repair the repeated columns
webpage_url <- "https://www.the-numbers.com/movie/budgets/all/%s"
table_new <- data.frame()
df <- merge(table_base,table_new,all = T)
View(df)
df <- merge(table_base,all = T)
df <- merge(table_base,all = T)
df <- merge(table_base,table_new,all = T)
rm()
rbind(table_base,table_new)
url_base <- "https://www.the-numbers.com/movie/budgets/all"
webpage_base <- read_html(url_base)
table_base <- rvest::html_table(webpage_base)[[1]] %>%
tibble::as_tibble(.name_repair = "unique") # repair the repeated columns
webpage_url <- "https://www.the-numbers.com/movie/budgets/all/%s"
table_new <- data.frame()
rbind(table_base,table_new)
rbind(table_base)
df1<- data.frame()
i<-101
while(i<5502){
webpage <- read_html(sprintf(webpage_url,i))
table_new <-rvest::html_table(webpage)[[1]] %>%
tibble::as_tibble(.name_repair = "unique") # repair the repeated columns
df1<- rbind(df1,table_new)
i=i+100
}
View(df1)
View(table_base)
#merging 100 obs. of base table and 5500 obs. of df1
df_movies <- merge(table_base,df1,all = T)
View(df_movies)
#sort df_movies by movie budget
df_movies <- df_movies[order(df_movies$ProductionBudget),]
View(df_movies)
#sort df_movies by movie budget
df_movies <- df_movies[order(df_movies$WorldwideGross),]
#sort df_movies by movie budget
df_movies <- df_movies[order(df_movies$WorldwideGross, decreasing = T),]
#merging 100 obs. of base table and 5500 obs. of df1
df_movies <- merge(table_base,df1,all = T)
View(df_movies)
#sort by production budget
df_movies <- df_movies[order(df_movies$ProductionBudget),]
#sort by production budget
df_movies <- df_movies[order(df_movies$ProductionBudget,decreasing = F),]
#sort by production budget
df_movies <- df_movies[order(df_movies$ProductionBudget,decreasing = T),]
#create a csv file
write.csv(df_movies)
#create a csv file
write.csv(df_movies, "movies.csv")
#change sr. number
df_movies$...1 <- 1:5601
#change sr. number
df_movies$...1 <- 1:5600
#create a csv file
write.csv(df_movies, "movies.csv")
load("~/DS_ML Projects_R_Python/Linear Regression/Predict Movie Revenue via Movie Budget/Gather the Data/.RData")
View(table_movie)
library(rvest)
library(rvest)
library(tibble)
library(purrr)
library(xml2)
library(rvest)
library(tibble)
library(purrr)
base_url <- "https://www.the-numbers.com/movie/budgets/all"
base_webpage <- read_html(base_url)
base_url <- "https://www.the-numbers.com/movie/budgets/all"
base_webpage <- read_html(base_url)
table_base <- rvest::html_table(base_webpage)[[1]] %>%
tibble::as_tibble(.name_repair = "unique") # repair the repeated columns
View(table_base)
new_urls<- "https://www.the-numbers.com/movie/budgets/all/%s"
table_new <-data.frame()
df <- data.frame()
i<-101
while (i<5502) {
new_webpage<- read_html(sprintf(new_urls,i))
table_new <- rvest::html_table(new_webpage)[[1]] %>%
tibble::as_tibble(.name_repair = "unique") # repair the repeated columns
df<- rbind(df,table_new)
i=i+100
}
View(df)
#merge the base and df
df_movies <- merge(table_base,df, all = T)
View(df_movies)
#create a csv file
write.csv(df_movies,"cost_revenue_dirty.csv")
